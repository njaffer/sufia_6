# -*- encoding: utf-8 -*-
# This file generated automatically using vocab-fetch from http://rdfs.org/sioc/ns#
require 'rdf'
module RDF
  # @deprecated Please use `RDF::Vocab::SIOC` from the rdf-vocab gem instead
  class SIOC < RDF::StrictVocabulary("http://rdfs.org/sioc/ns#")

    # Class definitions
    term :Community,
      comment: %(Community is a high-level concept that defines an online community and what it consists of.).freeze,
      label: "Community".freeze,
      "owl:disjointWith" => [%(sioc:Item).freeze, %(sioc:Role).freeze, %(sioc:UserAccount).freeze],
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:Class".freeze
    term :Container,
      comment: %(An area in which content Items are contained.).freeze,
      label: "Container".freeze,
      "owl:disjointWith" => [%(sioc:Item).freeze, %(sioc:Role).freeze, %(sioc:UserAccount).freeze, %(sioc:Usergroup).freeze],
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:Class".freeze
    term :Forum,
      comment: %(A discussion area on which Posts or entries are made.).freeze,
      label: "Forum".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subClassOf: "sioc:Container".freeze,
      type: "owl:Class".freeze
    term :Item,
      comment: %(An Item is something which can be in a Container.).freeze,
      label: "Item".freeze,
      "owl:disjointWith" => [%(sioc:Container).freeze, %(sioc:Role).freeze, %(sioc:Space).freeze, %(sioc:UserAccount).freeze, %(sioc:Usergroup).freeze],
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:Class".freeze
    term :Post,
      comment: %(An article or message that can be posted to a Forum.).freeze,
      label: "Post".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subClassOf: ["sioc:Item".freeze, "foaf:Document".freeze],
      type: "owl:Class".freeze
    term :Role,
      comment: %(A Role is a function of a UserAccount within a scope of a particular Forum, Site, etc.).freeze,
      label: "Role".freeze,
      "owl:disjointWith" => [%(sioc:Container).freeze, %(sioc:Item).freeze, %(sioc:Space).freeze, %(sioc:UserAccount).freeze, %(sioc:Usergroup).freeze],
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:Class".freeze
    term :Site,
      comment: %(A Site can be the location of an online community or set of communities, with UserAccounts and Usergroups creating Items in a set of Containers. It can be thought of as a web-accessible data Space.).freeze,
      label: "Site".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subClassOf: "sioc:Space".freeze,
      type: "owl:Class".freeze
    term :Space,
      comment: %(A Space is a place where data resides, e.g. on a website, desktop, fileshare, etc.).freeze,
      label: "Space".freeze,
      "owl:disjointWith" => [%(sioc:Item).freeze, %(sioc:Role).freeze, %(sioc:UserAccount).freeze, %(sioc:Usergroup).freeze],
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:Class".freeze
    term :Thread,
      comment: %(A container for a series of threaded discussion Posts or Items.).freeze,
      label: "Thread".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subClassOf: "sioc:Container".freeze,
      type: "owl:Class".freeze
    term :User,
      comment: %(UserAccount is now preferred. This is a deprecated class for a User in an online community site.).freeze,
      label: "User".freeze,
      "owl:disjointWith" => [%(sioc:Container).freeze, %(sioc:Item).freeze, %(sioc:Role).freeze, %(sioc:Space).freeze, %(sioc:Usergroup).freeze],
      "owl:equivalentClass" => %(sioc:UserAccount).freeze,
      "owl:versionInfo" => %(This class is deprecated. Use sioc:UserAccount from the SIOC ontology instead.).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subClassOf: "foaf:OnlineAccount".freeze,
      type: "owl:DeprecatedClass".freeze
    term :UserAccount,
      comment: %(A user account in an online community site.).freeze,
      label: "User Account".freeze,
      "owl:disjointWith" => [%(sioc:Container).freeze, %(sioc:Item).freeze, %(sioc:Role).freeze, %(sioc:Space).freeze, %(sioc:Usergroup).freeze],
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subClassOf: "foaf:OnlineAccount".freeze,
      type: "owl:Class".freeze
    term :Usergroup,
      comment: %(A set of UserAccounts whose owners have a common purpose or interest. Can be used for access control purposes.).freeze,
      label: "Usergroup".freeze,
      "owl:disjointWith" => [%(sioc:Container).freeze, %(sioc:Item).freeze, %(sioc:Role).freeze, %(sioc:Space).freeze, %(sioc:UserAccount).freeze],
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:Class".freeze

    # Property definitions
    property :about,
      comment: %(Specifies that this Item is about a particular resource, e.g. a Post describing a book, hotel, etc.).freeze,
      domain: "sioc:Item".freeze,
      label: "about".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :account_of,
      comment: %(Refers to the foaf:Agent or foaf:Person who owns this sioc:UserAccount.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "account of".freeze,
      "owl:inverseOf" => %(foaf:account).freeze,
      range: "foaf:Agent".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :addressed_to,
      comment: %(Refers to who \(e.g. a UserAccount, e-mail address, etc.\) a particular Item is addressed to.).freeze,
      domain: "sioc:Item".freeze,
      label: "addressed to".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :administrator_of,
      comment: %(A Site that the UserAccount is an administrator of.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "administrator of".freeze,
      "owl:inverseOf" => %(sioc:has_administrator).freeze,
      range: "sioc:Site".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :attachment,
      comment: %(The URI of a file attached to an Item.).freeze,
      domain: "sioc:Item".freeze,
      label: "attachment".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :avatar,
      comment: %(An image or depiction used to represent this UserAccount.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "avatar".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "foaf:depiction".freeze,
      type: "owl:ObjectProperty".freeze
    property :container_of,
      comment: %(An Item that this Container contains.).freeze,
      domain: "sioc:Container".freeze,
      label: "container of".freeze,
      "owl:inverseOf" => %(sioc:has_container).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :content,
      comment: %(The content of the Item in plain text format.).freeze,
      domain: "sioc:Item".freeze,
      label: "content".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :content_encoded,
      comment: %(The encoded content of the Post, contained in CDATA areas.).freeze,
      domain: "sioc:Post".freeze,
      label: "content encoded".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use content:encoded from the RSS 1.0 content module instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :created_at,
      comment: %(When this was created, in ISO 8601 format.).freeze,
      domain: "sioc:Post".freeze,
      label: "created at".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use dcterms:created from the Dublin Core ontology instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :creator_of,
      comment: %(A resource that the UserAccount is a creator of.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "creator of".freeze,
      "owl:inverseOf" => %(sioc:has_creator).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :description,
      comment: %(The content of the Post.).freeze,
      domain: "sioc:Post".freeze,
      label: "description".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use sioc:content or other methods \(AtomOwl, content:encoded from RSS 1.0, etc.\) instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :earlier_version,
      comment: %(Links to a previous \(older\) revision of this Item or Post.).freeze,
      domain: "sioc:Item".freeze,
      label: "earlier version".freeze,
      "owl:inverseOf" => %(sioc:later_version).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:TransitiveProperty".freeze
    property :email,
      comment: %(An electronic mail address of the UserAccount.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "email".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :email_sha1,
      comment: %(An electronic mail address of the UserAccount, encoded using SHA1.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "email sha1".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :embeds_knowledge,
      comment: %(This links Items to embedded statements, facts and structured content.).freeze,
      domain: "sioc:Item".freeze,
      label: "embeds knowledge".freeze,
      range: "http://www.w3.org/2004/03/trix/rdfg-1/Graph".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :feed,
      comment: %(A feed \(e.g. RSS, Atom, etc.\) pertaining to this resource \(e.g. for a Forum, Site, UserAccount, etc.\).).freeze,
      label: "feed".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :first_name,
      comment: %(First \(real\) name of this User. Synonyms include given name or christian name.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "first name".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use foaf:name or foaf:firstName from the FOAF vocabulary instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :follows,
      comment: %(Indicates that one UserAccount follows another UserAccount \(e.g. for microblog posts or other content item updates\).).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "follows".freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :function_of,
      comment: %(A UserAccount that has this Role.).freeze,
      domain: "sioc:Role".freeze,
      label: "function of".freeze,
      "owl:inverseOf" => %(sioc:has_function).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :group_of,
      label: "group of".freeze,
      "owl:inverseOf" => %(sioc:has_group).freeze,
      "owl:versionInfo" => %(This property has been renamed. Use sioc:usergroup_of instead.).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:ObjectProperty".freeze]
    property :has_administrator,
      comment: %(A UserAccount that is an administrator of this Site.).freeze,
      domain: "sioc:Site".freeze,
      label: "has administrator".freeze,
      "owl:inverseOf" => %(sioc:administrator_of).freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_container,
      comment: %(The Container to which this Item belongs.).freeze,
      domain: "sioc:Item".freeze,
      label: "has container".freeze,
      "owl:inverseOf" => %(sioc:container_of).freeze,
      range: "sioc:Container".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_creator,
      comment: %(This is the UserAccount that made this resource.).freeze,
      label: "has creator".freeze,
      "owl:inverseOf" => %(sioc:creator_of).freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_discussion,
      comment: %(The discussion that is related to this Item.).freeze,
      domain: "sioc:Item".freeze,
      label: "has discussion".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_function,
      comment: %(A Role that this UserAccount has.).freeze,
      label: "has function".freeze,
      "owl:inverseOf" => %(sioc:function_of).freeze,
      range: "sioc:Role".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_group,
      label: "has group".freeze,
      "owl:inverseOf" => %(sioc:group_of).freeze,
      "owl:versionInfo" => %(This property has been renamed. Use sioc:has_usergroup instead.).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:ObjectProperty".freeze]
    property :has_host,
      comment: %(The Site that hosts this Forum.).freeze,
      domain: "sioc:Forum".freeze,
      label: "has host".freeze,
      "owl:inverseOf" => %(sioc:host_of).freeze,
      range: "sioc:Site".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_member,
      comment: %(A UserAccount that is a member of this Usergroup.).freeze,
      domain: "sioc:Usergroup".freeze,
      label: "has member".freeze,
      "owl:inverseOf" => %(sioc:member_of).freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_moderator,
      comment: %(A UserAccount that is a moderator of this Forum.).freeze,
      domain: "sioc:Forum".freeze,
      label: "has moderator".freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_modifier,
      comment: %(A UserAccount that modified this Item.).freeze,
      domain: "sioc:Item".freeze,
      label: "has modifier".freeze,
      "owl:inverseOf" => %(sioc:modifier_of).freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_owner,
      comment: %(A UserAccount that this resource is owned by.).freeze,
      label: "has owner".freeze,
      "owl:inverseOf" => %(sioc:owner_of).freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_parent,
      comment: %(A Container or Forum that this Container or Forum is a child of.).freeze,
      domain: "sioc:Container".freeze,
      label: "has parent".freeze,
      "owl:inverseOf" => %(sioc:parent_of).freeze,
      range: "sioc:Container".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_part,
      comment: %(An resource that is a part of this subject.).freeze,
      label: "has part".freeze,
      "owl:inverseOf" => %(sioc:part_of).freeze,
      "owl:versionInfo" => %(This property is deprecated. Use dcterms:hasPart from the Dublin Core ontology instead.).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:ObjectProperty".freeze]
    property :has_reply,
      comment: %(Points to an Item or Post that is a reply or response to this Item or Post.).freeze,
      domain: "sioc:Item".freeze,
      label: "has reply".freeze,
      "owl:inverseOf" => %(sioc:reply_of).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "sioc:related_to".freeze,
      type: "owl:ObjectProperty".freeze
    property :has_scope,
      comment: %(A resource that this Role applies to.).freeze,
      domain: "sioc:Role".freeze,
      label: "has scope".freeze,
      "owl:inverseOf" => %(sioc:scope_of).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_space,
      comment: %(A data Space which this resource is a part of.).freeze,
      label: "has space".freeze,
      "owl:inverseOf" => %(sioc:space_of).freeze,
      range: "sioc:Space".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_subscriber,
      comment: %(A UserAccount that is subscribed to this Container.).freeze,
      domain: "sioc:Container".freeze,
      label: "has subscriber".freeze,
      "owl:inverseOf" => %(sioc:subscriber_of).freeze,
      range: "sioc:UserAccount".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      "rdfs:seeAlso" => %(sioc:feed).freeze,
      type: "owl:ObjectProperty".freeze
    property :has_usergroup,
      comment: %(Points to a Usergroup that has certain access to this Space.).freeze,
      domain: "sioc:Space".freeze,
      label: "has usergroup".freeze,
      "owl:inverseOf" => %(sioc:usergroup_of).freeze,
      range: "sioc:Usergroup".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :host_of,
      comment: %(A Forum that is hosted on this Site.).freeze,
      domain: "sioc:Site".freeze,
      label: "host of".freeze,
      "owl:inverseOf" => %(sioc:has_host).freeze,
      range: "sioc:Forum".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :id,
      comment: %(An identifier of a SIOC concept instance. For example, a user ID. Must be unique for instances of each type of SIOC concept within the same site.).freeze,
      label: "id".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :ip_address,
      comment: %(The IP address used when creating this Item. This can be associated with a creator. Some wiki articles list the IP addresses for the creator or modifiers when the usernames are absent.).freeze,
      domain: "sioc:Item".freeze,
      label: "ip address".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :last_activity_date,
      comment: %(The date and time of the last activity associated with a SIOC concept instance, and expressed in ISO 8601 format. This could be due to a reply Post or Comment, a modification to an Item, etc.).freeze,
      label: "last activity date".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "dc:date".freeze,
      type: "owl:DatatypeProperty".freeze
    property :last_item_date,
      comment: %(The date and time of the last Post \(or Item\) in a Forum \(or a Container\), in ISO 8601 format.).freeze,
      domain: "sioc:Container".freeze,
      label: "last item date".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "dc:date".freeze,
      type: "owl:DatatypeProperty".freeze
    property :last_name,
      comment: %(Last \(real\) name of this user. Synonyms include surname or family name.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "last name".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use foaf:name or foaf:surname from the FOAF vocabulary instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :last_reply_date,
      comment: %(The date and time of the last reply Post or Comment, which could be associated with a starter Item or Post or with a Thread, and expressed in ISO 8601 format.).freeze,
      label: "last reply date".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "dc:date".freeze,
      type: "owl:DatatypeProperty".freeze
    property :later_version,
      comment: %(Links to a later \(newer\) revision of this Item or Post.).freeze,
      domain: "sioc:Item".freeze,
      label: "later version".freeze,
      "owl:inverseOf" => %(sioc:earlier_version).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:TransitiveProperty".freeze
    property :latest_version,
      comment: %(Links to the latest revision of this Item or Post.).freeze,
      domain: "sioc:Item".freeze,
      label: "latest version".freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :link,
      comment: %(A URI of a document which contains this SIOC object.).freeze,
      label: "link".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :links_to,
      comment: %(Links extracted from hyperlinks within a SIOC concept, e.g. Post or Site.).freeze,
      label: "links to".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "dc:references".freeze,
      type: "owl:ObjectProperty".freeze
    property :member_of,
      comment: %(A Usergroup that this UserAccount is a member of.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "member of".freeze,
      "owl:inverseOf" => %(sioc:has_member).freeze,
      range: "sioc:Usergroup".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :moderator_of,
      comment: %(A Forum that a UserAccount is a moderator of.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "moderator of".freeze,
      "owl:inverseOf" => %(sioc:has_moderator).freeze,
      range: "sioc:Forum".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :modified_at,
      comment: %(When this was modified, in ISO 8601 format.).freeze,
      domain: "sioc:Post".freeze,
      label: "modified at".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use dcterms:modified from the Dublin Core ontology instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :modifier_of,
      comment: %(An Item that this UserAccount has modified.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "modifier of".freeze,
      "owl:inverseOf" => %(sioc:has_modifier).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :name,
      comment: %(The name of a SIOC concept instance, e.g. a username for a UserAccount, group name for a Usergroup, etc.).freeze,
      label: "name".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :next_by_date,
      comment: %(Next Item or Post in a given Container sorted by date.).freeze,
      domain: "sioc:Item".freeze,
      label: "next by date".freeze,
      "owl:inverseOf" => %(sioc:previous_by_date).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :next_version,
      comment: %(Links to the next revision of this Item or Post.).freeze,
      domain: "sioc:Item".freeze,
      label: "next version".freeze,
      "owl:inverseOf" => %(sioc:previous_version).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "sioc:later_version".freeze,
      type: "owl:ObjectProperty".freeze
    property :note,
      comment: %(A note associated with this resource, for example, if it has been edited by a UserAccount.).freeze,
      label: "note".freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :num_authors,
      comment: %(The number of unique authors \(UserAccounts and unregistered posters\) who have contributed to this Item, Thread, Post, etc.).freeze,
      label: "num authors".freeze,
      range: "xsd:nonNegativeInteger".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :num_items,
      comment: %(The number of Posts \(or Items\) in a Forum \(or a Container\).).freeze,
      domain: "sioc:Container".freeze,
      label: "num items".freeze,
      range: "xsd:nonNegativeInteger".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :num_replies,
      comment: %(The number of replies that this Item, Thread, Post, etc. has. Useful for when the reply structure is absent.).freeze,
      label: "num replies".freeze,
      range: "xsd:nonNegativeInteger".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :num_threads,
      comment: %(The number of Threads \(AKA discussion topics\) in a Forum.).freeze,
      domain: "sioc:Forum".freeze,
      label: "num threads".freeze,
      range: "xsd:nonNegativeInteger".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :num_views,
      comment: %(The number of times this Item, Thread, UserAccount profile, etc. has been viewed.).freeze,
      label: "num views".freeze,
      range: "xsd:nonNegativeInteger".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:DatatypeProperty".freeze
    property :owner_of,
      comment: %(A resource owned by a particular UserAccount, for example, a weblog or image gallery.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "owner of".freeze,
      "owl:inverseOf" => %(sioc:has_owner).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :parent_of,
      comment: %(A child Container or Forum that this Container or Forum is a parent of.).freeze,
      domain: "sioc:Container".freeze,
      label: "parent of".freeze,
      "owl:inverseOf" => %(sioc:has_parent).freeze,
      range: "sioc:Container".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :part_of,
      comment: %(A resource that the subject is a part of.).freeze,
      label: "part of".freeze,
      "owl:inverseOf" => %(sioc:has_part).freeze,
      "owl:versionInfo" => %(This property is deprecated. Use dcterms:isPartOf from the Dublin Core ontology instead.).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:ObjectProperty".freeze]
    property :previous_by_date,
      comment: %(Previous Item or Post in a given Container sorted by date.).freeze,
      domain: "sioc:Item".freeze,
      label: "previous by date".freeze,
      "owl:inverseOf" => %(sioc:next_by_date).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :previous_version,
      comment: %(Links to the previous revision of this Item or Post.).freeze,
      domain: "sioc:Item".freeze,
      label: "previous version".freeze,
      "owl:inverseOf" => %(sioc:next_version).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "sioc:earlier_version".freeze,
      type: "owl:ObjectProperty".freeze
    property :reference,
      comment: %(Links either created explicitly or extracted implicitly on the HTML level from the Post.).freeze,
      domain: "sioc:Post".freeze,
      label: "reference".freeze,
      "owl:versionInfo" => %(Renamed to sioc:links_to.).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:ObjectProperty".freeze]
    property :related_to,
      comment: %(Related Posts for this Post, perhaps determined implicitly from topics or references.).freeze,
      label: "related to".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :reply_of,
      comment: %(Links to an Item or Post which this Item or Post is a reply to.).freeze,
      domain: "sioc:Item".freeze,
      label: "reply of".freeze,
      "owl:inverseOf" => %(sioc:has_reply).freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "sioc:related_to".freeze,
      type: "owl:ObjectProperty".freeze
    property :scope_of,
      comment: %(A Role that has a scope of this resource.).freeze,
      label: "scope of".freeze,
      "owl:inverseOf" => %(sioc:has_scope).freeze,
      range: "sioc:Role".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :sibling,
      comment: %(An Item may have a sibling or a twin that exists in a different Container, but the siblings may differ in some small way \(for example, language, category, etc.\). The sibling of this Item should be self-describing \(that is, it should contain all available information\).).freeze,
      domain: "sioc:Item".freeze,
      label: "sibling".freeze,
      range: "sioc:Item".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:SymmetricProperty".freeze
    property :space_of,
      comment: %(A resource which belongs to this data Space.).freeze,
      domain: "sioc:Space".freeze,
      label: "space of".freeze,
      "owl:inverseOf" => %(sioc:has_space).freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze
    property :subject,
      comment: %(Keyword\(s\) describing subject of the Post.).freeze,
      domain: "sioc:Post".freeze,
      label: "subject".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use dcterms:subject from the Dublin Core ontology for text keywords and sioc:topic if the subject can be represented by a URI instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :subscriber_of,
      comment: %(A Container that a UserAccount is subscribed to.).freeze,
      domain: "sioc:UserAccount".freeze,
      label: "subscriber of".freeze,
      "owl:inverseOf" => %(sioc:has_subscriber).freeze,
      range: "sioc:Container".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      "rdfs:seeAlso" => %(sioc:feed).freeze,
      type: "owl:ObjectProperty".freeze
    property :title,
      comment: %(This is the title \(subject line\) of the Post. Note that for a Post within a threaded discussion that has no parents, it would detail the topic thread.).freeze,
      domain: "sioc:Post".freeze,
      label: "title".freeze,
      "owl:versionInfo" => %(This property is deprecated. Use dcterms:title from the Dublin Core ontology instead.).freeze,
      range: "rdfs:Literal".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: ["owl:DeprecatedProperty".freeze, "owl:DatatypeProperty".freeze]
    property :topic,
      comment: %(A topic of interest, linking to the appropriate URI, e.g. in the Open Directory Project or of a SKOS category.).freeze,
      label: "topic".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      subPropertyOf: "dc:subject".freeze,
      type: "owl:ObjectProperty".freeze
    property :usergroup_of,
      comment: %(A Space that the Usergroup has access to.).freeze,
      domain: "sioc:Usergroup".freeze,
      label: "usergroup of".freeze,
      "owl:inverseOf" => %(sioc:has_usergroup).freeze,
      range: "sioc:Space".freeze,
      "rdfs:isDefinedBy" => %(sioc:).freeze,
      type: "owl:ObjectProperty".freeze

    # Extra definitions
    term :"",
      "dc:description" => %(SIOC \(Semantically-Interlinked Online Communities\) is an ontology for describing the information in online communities. 
This information can be used to export information from online communities and to link them together. The scope of the application areas that SIOC can be used for includes \(and is not limited to\) weblogs, message boards, mailing lists and chat channels.).freeze,
      "dc:title" => %(SIOC Core Ontology Namespace).freeze,
      label: "".freeze,
      "owl:versionInfo" => %(Revision: 1.35).freeze,
      "rdfs:seeAlso" => %(http://rdfs.org/sioc/spec).freeze,
      type: ["owl:Ontology".freeze, "owl:Thing".freeze]
  end
end
