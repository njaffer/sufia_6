# -*- encoding: utf-8 -*-
# This file generated automatically using vocab-fetch from http://id.loc.gov/vocabulary/relators.rdf
require 'rdf'
module RDF::Vocab
  class MARCRelators < RDF::StrictVocabulary("http://id.loc.gov/vocabulary/relators/")

    # Property definitions
    property :abr,
      label: "Abridger".freeze,
      "mads:authoritativeLabel" => %(Abridger).freeze,
      "mads:code" => %(abr).freeze,
      "skos:notation" => %(abr).freeze,
      "skos:prefLabel" => %(Abridger).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :acp,
      label: "Art copyist".freeze,
      "mads:authoritativeLabel" => %(Art copyist).freeze,
      "mads:code" => %(acp).freeze,
      "skos:notation" => %(acp).freeze,
      "skos:prefLabel" => %(Art copyist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :act,
      label: "Actor".freeze,
      "mads:authoritativeLabel" => %(Actor).freeze,
      "mads:code" => %(act).freeze,
      "skos:notation" => %(act).freeze,
      "skos:prefLabel" => %(Actor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :adi,
      label: "Art director".freeze,
      "mads:authoritativeLabel" => %(Art director).freeze,
      "mads:code" => %(adi).freeze,
      "skos:notation" => %(adi).freeze,
      "skos:prefLabel" => %(Art director).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :adp,
      label: "Adapter".freeze,
      "mads:authoritativeLabel" => %(Adapter).freeze,
      "mads:code" => %(adp).freeze,
      "skos:notation" => %(adp).freeze,
      "skos:prefLabel" => %(Adapter).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aft,
      label: "Author of afterword, colophon, etc.".freeze,
      "mads:authoritativeLabel" => %(Author of afterword, colophon, etc.).freeze,
      "mads:code" => %(aft).freeze,
      "skos:notation" => %(aft).freeze,
      "skos:prefLabel" => %(Author of afterword, colophon, etc.).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :anl,
      label: "Analyst".freeze,
      "mads:authoritativeLabel" => %(Analyst).freeze,
      "mads:code" => %(anl).freeze,
      "skos:notation" => %(anl).freeze,
      "skos:prefLabel" => %(Analyst).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :anm,
      label: "Animator".freeze,
      "mads:authoritativeLabel" => %(Animator).freeze,
      "mads:code" => %(anm).freeze,
      "skos:notation" => %(anm).freeze,
      "skos:prefLabel" => %(Animator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ann,
      label: "Annotator".freeze,
      "mads:authoritativeLabel" => %(Annotator).freeze,
      "mads:code" => %(ann).freeze,
      "skos:notation" => %(ann).freeze,
      "skos:prefLabel" => %(Annotator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ant,
      label: "Bibliographic antecedent".freeze,
      "mads:authoritativeLabel" => %(Bibliographic antecedent).freeze,
      "mads:code" => %(ant).freeze,
      "skos:notation" => %(ant).freeze,
      "skos:prefLabel" => %(Bibliographic antecedent).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ape,
      label: "Appellee".freeze,
      "mads:authoritativeLabel" => %(Appellee).freeze,
      "mads:code" => %(ape).freeze,
      "skos:notation" => %(ape).freeze,
      "skos:prefLabel" => %(Appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :apl,
      label: "Appellant".freeze,
      "mads:authoritativeLabel" => %(Appellant).freeze,
      "mads:code" => %(apl).freeze,
      "skos:notation" => %(apl).freeze,
      "skos:prefLabel" => %(Appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :app,
      label: "Applicant".freeze,
      "mads:authoritativeLabel" => %(Applicant).freeze,
      "mads:code" => %(app).freeze,
      "skos:notation" => %(app).freeze,
      "skos:prefLabel" => %(Applicant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aqt,
      label: "Author in quotations or text abstracts".freeze,
      "mads:authoritativeLabel" => %(Author in quotations or text abstracts).freeze,
      "mads:code" => %(aqt).freeze,
      "skos:notation" => %(aqt).freeze,
      "skos:prefLabel" => %(Author in quotations or text abstracts).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :arc,
      label: "Architect".freeze,
      "mads:authoritativeLabel" => %(Architect).freeze,
      "mads:code" => %(arc).freeze,
      "skos:notation" => %(arc).freeze,
      "skos:prefLabel" => %(Architect).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ard,
      label: "Artistic director".freeze,
      "mads:authoritativeLabel" => %(Artistic director).freeze,
      "mads:code" => %(ard).freeze,
      "skos:notation" => %(ard).freeze,
      "skos:prefLabel" => %(Artistic director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :arr,
      label: "Arranger".freeze,
      "mads:authoritativeLabel" => %(Arranger).freeze,
      "mads:code" => %(arr).freeze,
      "skos:notation" => %(arr).freeze,
      "skos:prefLabel" => %(Arranger).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :art,
      label: "Artist".freeze,
      "mads:authoritativeLabel" => %(Artist).freeze,
      "mads:code" => %(art).freeze,
      "skos:notation" => %(art).freeze,
      "skos:prefLabel" => %(Artist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :asg,
      label: "Assignee".freeze,
      "mads:authoritativeLabel" => %(Assignee).freeze,
      "mads:code" => %(asg).freeze,
      "skos:notation" => %(asg).freeze,
      "skos:prefLabel" => %(Assignee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :asn,
      label: "Associated name".freeze,
      "mads:authoritativeLabel" => %(Associated name).freeze,
      "mads:code" => %(asn).freeze,
      "skos:notation" => %(asn).freeze,
      "skos:prefLabel" => %(Associated name).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ato,
      label: "Autographer".freeze,
      "mads:authoritativeLabel" => %(Autographer).freeze,
      "mads:code" => %(ato).freeze,
      "skos:notation" => %(ato).freeze,
      "skos:prefLabel" => %(Autographer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :att,
      label: "Attributed name".freeze,
      "mads:authoritativeLabel" => %(Attributed name).freeze,
      "mads:code" => %(att).freeze,
      "skos:notation" => %(att).freeze,
      "skos:prefLabel" => %(Attributed name).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :auc,
      label: "Auctioneer".freeze,
      "mads:authoritativeLabel" => %(Auctioneer).freeze,
      "mads:code" => %(auc).freeze,
      "skos:notation" => %(auc).freeze,
      "skos:prefLabel" => %(Auctioneer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aud,
      label: "Author of dialog".freeze,
      "mads:authoritativeLabel" => %(Author of dialog).freeze,
      "mads:code" => %(aud).freeze,
      "skos:notation" => %(aud).freeze,
      "skos:prefLabel" => %(Author of dialog).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aui,
      label: "Author of introduction, etc.".freeze,
      "mads:authoritativeLabel" => %(Author of introduction, etc.).freeze,
      "mads:code" => %(aui).freeze,
      "skos:notation" => %(aui).freeze,
      "skos:prefLabel" => %(Author of introduction, etc.).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aus,
      label: "Screenwriter".freeze,
      "mads:authoritativeLabel" => %(Screenwriter).freeze,
      "mads:code" => %(aus).freeze,
      "skos:notation" => %(aus).freeze,
      "skos:prefLabel" => %(Screenwriter).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aut,
      label: "Author".freeze,
      "mads:authoritativeLabel" => %(Author).freeze,
      "mads:code" => %(aut).freeze,
      "skos:notation" => %(aut).freeze,
      "skos:prefLabel" => %(Author).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bdd,
      label: "Binding designer".freeze,
      "mads:authoritativeLabel" => %(Binding designer).freeze,
      "mads:code" => %(bdd).freeze,
      "skos:notation" => %(bdd).freeze,
      "skos:prefLabel" => %(Binding designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bjd,
      label: "Bookjacket designer".freeze,
      "mads:authoritativeLabel" => %(Bookjacket designer).freeze,
      "mads:code" => %(bjd).freeze,
      "skos:notation" => %(bjd).freeze,
      "skos:prefLabel" => %(Bookjacket designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bkd,
      label: "Book designer".freeze,
      "mads:authoritativeLabel" => %(Book designer).freeze,
      "mads:code" => %(bkd).freeze,
      "skos:notation" => %(bkd).freeze,
      "skos:prefLabel" => %(Book designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bkp,
      label: "Book producer".freeze,
      "mads:authoritativeLabel" => %(Book producer).freeze,
      "mads:code" => %(bkp).freeze,
      "skos:notation" => %(bkp).freeze,
      "skos:prefLabel" => %(Book producer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :blw,
      label: "Blurb writer".freeze,
      "mads:authoritativeLabel" => %(Blurb writer).freeze,
      "mads:code" => %(blw).freeze,
      "skos:notation" => %(blw).freeze,
      "skos:prefLabel" => %(Blurb writer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bnd,
      label: "Binder".freeze,
      "mads:authoritativeLabel" => %(Binder).freeze,
      "mads:code" => %(bnd).freeze,
      "skos:notation" => %(bnd).freeze,
      "skos:prefLabel" => %(Binder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bpd,
      label: "Bookplate designer".freeze,
      "mads:authoritativeLabel" => %(Bookplate designer).freeze,
      "mads:code" => %(bpd).freeze,
      "skos:notation" => %(bpd).freeze,
      "skos:prefLabel" => %(Bookplate designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :brd,
      label: "Broadcaster".freeze,
      "mads:authoritativeLabel" => %(Broadcaster).freeze,
      "mads:code" => %(brd).freeze,
      "skos:notation" => %(brd).freeze,
      "skos:prefLabel" => %(Broadcaster).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :brl,
      label: "Braille embosser".freeze,
      "mads:authoritativeLabel" => %(Braille embosser).freeze,
      "mads:code" => %(brl).freeze,
      "skos:notation" => %(brl).freeze,
      "skos:prefLabel" => %(Braille embosser).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bsl,
      label: "Bookseller".freeze,
      "mads:authoritativeLabel" => %(Bookseller).freeze,
      "mads:code" => %(bsl).freeze,
      "skos:notation" => %(bsl).freeze,
      "skos:prefLabel" => %(Bookseller).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cas,
      label: "Caster".freeze,
      "mads:authoritativeLabel" => %(Caster).freeze,
      "mads:code" => %(cas).freeze,
      "skos:notation" => %(cas).freeze,
      "skos:prefLabel" => %(Caster).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ccp,
      label: "Conceptor".freeze,
      "mads:authoritativeLabel" => %(Conceptor).freeze,
      "mads:code" => %(ccp).freeze,
      "skos:notation" => %(ccp).freeze,
      "skos:prefLabel" => %(Conceptor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :chr,
      label: "Choreographer".freeze,
      "mads:authoritativeLabel" => %(Choreographer).freeze,
      "mads:code" => %(chr).freeze,
      "skos:notation" => %(chr).freeze,
      "skos:prefLabel" => %(Choreographer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cli,
      label: "Client".freeze,
      "mads:authoritativeLabel" => %(Client).freeze,
      "mads:code" => %(cli).freeze,
      "skos:notation" => %(cli).freeze,
      "skos:prefLabel" => %(Client).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cll,
      label: "Calligrapher".freeze,
      "mads:authoritativeLabel" => %(Calligrapher).freeze,
      "mads:code" => %(cll).freeze,
      "skos:notation" => %(cll).freeze,
      "skos:prefLabel" => %(Calligrapher).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :clr,
      label: "Colorist".freeze,
      "mads:authoritativeLabel" => %(Colorist).freeze,
      "mads:code" => %(clr).freeze,
      "skos:notation" => %(clr).freeze,
      "skos:prefLabel" => %(Colorist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :clt,
      label: "Collotyper".freeze,
      "mads:authoritativeLabel" => %(Collotyper).freeze,
      "mads:code" => %(clt).freeze,
      "skos:notation" => %(clt).freeze,
      "skos:prefLabel" => %(Collotyper).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cmm,
      label: "Commentator".freeze,
      "mads:authoritativeLabel" => %(Commentator).freeze,
      "mads:code" => %(cmm).freeze,
      "skos:notation" => %(cmm).freeze,
      "skos:prefLabel" => %(Commentator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cmp,
      label: "Composer".freeze,
      "mads:authoritativeLabel" => %(Composer).freeze,
      "mads:code" => %(cmp).freeze,
      "skos:notation" => %(cmp).freeze,
      "skos:prefLabel" => %(Composer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cmt,
      label: "Compositor".freeze,
      "mads:authoritativeLabel" => %(Compositor).freeze,
      "mads:code" => %(cmt).freeze,
      "skos:notation" => %(cmt).freeze,
      "skos:prefLabel" => %(Compositor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cnd,
      label: "Conductor".freeze,
      "mads:authoritativeLabel" => %(Conductor).freeze,
      "mads:code" => %(cnd).freeze,
      "skos:notation" => %(cnd).freeze,
      "skos:prefLabel" => %(Conductor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cng,
      label: "Cinematographer".freeze,
      "mads:authoritativeLabel" => %(Cinematographer).freeze,
      "mads:code" => %(cng).freeze,
      "skos:notation" => %(cng).freeze,
      "skos:prefLabel" => %(Cinematographer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cns,
      label: "Censor".freeze,
      "mads:authoritativeLabel" => %(Censor).freeze,
      "mads:code" => %(cns).freeze,
      "skos:notation" => %(cns).freeze,
      "skos:prefLabel" => %(Censor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :coe,
      label: "Contestant-appellee".freeze,
      "mads:authoritativeLabel" => %(Contestant-appellee).freeze,
      "mads:code" => %(coe).freeze,
      "skos:notation" => %(coe).freeze,
      "skos:prefLabel" => %(Contestant-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cos".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :col,
      label: "Collector".freeze,
      "mads:authoritativeLabel" => %(Collector).freeze,
      "mads:code" => %(col).freeze,
      "skos:notation" => %(col).freeze,
      "skos:prefLabel" => %(Collector).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cur".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :com,
      label: "Compiler".freeze,
      "mads:authoritativeLabel" => %(Compiler).freeze,
      "mads:code" => %(com).freeze,
      "skos:notation" => %(com).freeze,
      "skos:prefLabel" => %(Compiler).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :con,
      label: "Conservator".freeze,
      "mads:authoritativeLabel" => %(Conservator).freeze,
      "mads:code" => %(con).freeze,
      "skos:notation" => %(con).freeze,
      "skos:prefLabel" => %(Conservator).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cor,
      label: "Collection registrar".freeze,
      "mads:authoritativeLabel" => %(Collection registrar).freeze,
      "mads:code" => %(cor).freeze,
      "skos:notation" => %(cor).freeze,
      "skos:prefLabel" => %(Collection registrar).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cur".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cos,
      label: "Contestant".freeze,
      "mads:authoritativeLabel" => %(Contestant).freeze,
      "mads:code" => %(cos).freeze,
      "skos:notation" => %(cos).freeze,
      "skos:prefLabel" => %(Contestant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cot,
      label: "Contestant-appellant".freeze,
      "mads:authoritativeLabel" => %(Contestant-appellant).freeze,
      "mads:code" => %(cot).freeze,
      "skos:notation" => %(cot).freeze,
      "skos:prefLabel" => %(Contestant-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cos".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cou,
      label: "Court governed".freeze,
      "mads:authoritativeLabel" => %(Court governed).freeze,
      "mads:code" => %(cou).freeze,
      "skos:notation" => %(cou).freeze,
      "skos:prefLabel" => %(Court governed).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cov,
      label: "Cover designer".freeze,
      "mads:authoritativeLabel" => %(Cover designer).freeze,
      "mads:code" => %(cov).freeze,
      "skos:notation" => %(cov).freeze,
      "skos:prefLabel" => %(Cover designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpc,
      label: "Copyright claimant".freeze,
      "mads:authoritativeLabel" => %(Copyright claimant).freeze,
      "mads:code" => %(cpc).freeze,
      "skos:notation" => %(cpc).freeze,
      "skos:prefLabel" => %(Copyright claimant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpe,
      label: "Complainant-appellee".freeze,
      "mads:authoritativeLabel" => %(Complainant-appellee).freeze,
      "mads:code" => %(cpe).freeze,
      "skos:notation" => %(cpe).freeze,
      "skos:prefLabel" => %(Complainant-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cpl".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cph,
      label: "Copyright holder".freeze,
      "mads:authoritativeLabel" => %(Copyright holder).freeze,
      "mads:code" => %(cph).freeze,
      "skos:notation" => %(cph).freeze,
      "skos:prefLabel" => %(Copyright holder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpl,
      label: "Complainant".freeze,
      "mads:authoritativeLabel" => %(Complainant).freeze,
      "mads:code" => %(cpl).freeze,
      "skos:notation" => %(cpl).freeze,
      "skos:prefLabel" => %(Complainant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpt,
      label: "Complainant-appellant".freeze,
      "mads:authoritativeLabel" => %(Complainant-appellant).freeze,
      "mads:code" => %(cpt).freeze,
      "skos:notation" => %(cpt).freeze,
      "skos:prefLabel" => %(Complainant-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cpl".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cre,
      label: "Creator".freeze,
      "mads:authoritativeLabel" => %(Creator).freeze,
      "mads:code" => %(cre).freeze,
      "skos:notation" => %(cre).freeze,
      "skos:prefLabel" => %(Creator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:creator".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :crp,
      label: "Correspondent".freeze,
      "mads:authoritativeLabel" => %(Correspondent).freeze,
      "mads:code" => %(crp).freeze,
      "skos:notation" => %(crp).freeze,
      "skos:prefLabel" => %(Correspondent).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :crr,
      label: "Corrector".freeze,
      "mads:authoritativeLabel" => %(Corrector).freeze,
      "mads:code" => %(crr).freeze,
      "skos:notation" => %(crr).freeze,
      "skos:prefLabel" => %(Corrector).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :crt,
      label: "Court reporter".freeze,
      "mads:authoritativeLabel" => %(Court reporter).freeze,
      "mads:code" => %(crt).freeze,
      "skos:notation" => %(crt).freeze,
      "skos:prefLabel" => %(Court reporter).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :csl,
      label: "Consultant".freeze,
      "mads:authoritativeLabel" => %(Consultant).freeze,
      "mads:code" => %(csl).freeze,
      "skos:notation" => %(csl).freeze,
      "skos:prefLabel" => %(Consultant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :csp,
      label: "Consultant to a project".freeze,
      "mads:authoritativeLabel" => %(Consultant to a project).freeze,
      "mads:code" => %(csp).freeze,
      "skos:notation" => %(csp).freeze,
      "skos:prefLabel" => %(Consultant to a project).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cst,
      label: "Costume designer".freeze,
      "mads:authoritativeLabel" => %(Costume designer).freeze,
      "mads:code" => %(cst).freeze,
      "skos:notation" => %(cst).freeze,
      "skos:prefLabel" => %(Costume designer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctb,
      label: "Contributor".freeze,
      "mads:authoritativeLabel" => %(Contributor).freeze,
      "mads:code" => %(ctb).freeze,
      "skos:notation" => %(ctb).freeze,
      "skos:prefLabel" => %(Contributor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cte,
      label: "Contestee-appellee".freeze,
      "mads:authoritativeLabel" => %(Contestee-appellee).freeze,
      "mads:code" => %(cte).freeze,
      "skos:notation" => %(cte).freeze,
      "skos:prefLabel" => %(Contestee-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cts".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctg,
      label: "Cartographer".freeze,
      "mads:authoritativeLabel" => %(Cartographer).freeze,
      "mads:code" => %(ctg).freeze,
      "skos:notation" => %(ctg).freeze,
      "skos:prefLabel" => %(Cartographer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctr,
      label: "Contractor".freeze,
      "mads:authoritativeLabel" => %(Contractor).freeze,
      "mads:code" => %(ctr).freeze,
      "skos:notation" => %(ctr).freeze,
      "skos:prefLabel" => %(Contractor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cts,
      label: "Contestee".freeze,
      "mads:authoritativeLabel" => %(Contestee).freeze,
      "mads:code" => %(cts).freeze,
      "skos:notation" => %(cts).freeze,
      "skos:prefLabel" => %(Contestee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctt,
      label: "Contestee-appellant".freeze,
      "mads:authoritativeLabel" => %(Contestee-appellant).freeze,
      "mads:code" => %(ctt).freeze,
      "skos:notation" => %(ctt).freeze,
      "skos:prefLabel" => %(Contestee-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:cts".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cur,
      label: "Curator".freeze,
      "mads:authoritativeLabel" => %(Curator).freeze,
      "mads:code" => %(cur).freeze,
      "skos:notation" => %(cur).freeze,
      "skos:prefLabel" => %(Curator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cwt,
      label: "Commentator for written text".freeze,
      "mads:authoritativeLabel" => %(Commentator for written text).freeze,
      "mads:code" => %(cwt).freeze,
      "skos:notation" => %(cwt).freeze,
      "skos:prefLabel" => %(Commentator for written text).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dbp,
      label: "Distribution place".freeze,
      "mads:authoritativeLabel" => %(Distribution place).freeze,
      "mads:code" => %(dbp).freeze,
      "skos:notation" => %(dbp).freeze,
      "skos:prefLabel" => %(Distribution place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dfd,
      label: "Defendant".freeze,
      "mads:authoritativeLabel" => %(Defendant).freeze,
      "mads:code" => %(dfd).freeze,
      "skos:notation" => %(dfd).freeze,
      "skos:prefLabel" => %(Defendant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dfe,
      label: "Defendant-appellee".freeze,
      "mads:authoritativeLabel" => %(Defendant-appellee).freeze,
      "mads:code" => %(dfe).freeze,
      "skos:notation" => %(dfe).freeze,
      "skos:prefLabel" => %(Defendant-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:dfd".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dft,
      label: "Defendant-appellant".freeze,
      "mads:authoritativeLabel" => %(Defendant-appellant).freeze,
      "mads:code" => %(dft).freeze,
      "skos:notation" => %(dft).freeze,
      "skos:prefLabel" => %(Defendant-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:dfd".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dgg,
      label: "Degree granting institution".freeze,
      "mads:authoritativeLabel" => %(Degree granting institution).freeze,
      "mads:code" => %(dgg).freeze,
      "skos:notation" => %(dgg).freeze,
      "skos:prefLabel" => %(Degree granting institution).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dgs,
      label: "Degree supervisor".freeze,
      "mads:authoritativeLabel" => %(Degree supervisor).freeze,
      "mads:code" => %(dgs).freeze,
      "skos:notation" => %(dgs).freeze,
      "skos:prefLabel" => %(Degree supervisor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dis,
      label: "Dissertant".freeze,
      "mads:authoritativeLabel" => %(Dissertant).freeze,
      "mads:code" => %(dis).freeze,
      "skos:notation" => %(dis).freeze,
      "skos:prefLabel" => %(Dissertant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dln,
      label: "Delineator".freeze,
      "mads:authoritativeLabel" => %(Delineator).freeze,
      "mads:code" => %(dln).freeze,
      "skos:notation" => %(dln).freeze,
      "skos:prefLabel" => %(Delineator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dnc,
      label: "Dancer".freeze,
      "mads:authoritativeLabel" => %(Dancer).freeze,
      "mads:code" => %(dnc).freeze,
      "skos:notation" => %(dnc).freeze,
      "skos:prefLabel" => %(Dancer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dnr,
      label: "Donor".freeze,
      "mads:authoritativeLabel" => %(Donor).freeze,
      "mads:code" => %(dnr).freeze,
      "skos:notation" => %(dnr).freeze,
      "skos:prefLabel" => %(Donor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:fmo".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dpc,
      label: "Depicted".freeze,
      "mads:authoritativeLabel" => %(Depicted).freeze,
      "mads:code" => %(dpc).freeze,
      "skos:notation" => %(dpc).freeze,
      "skos:prefLabel" => %(Depicted).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:subject".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dpt,
      label: "Depositor".freeze,
      "mads:authoritativeLabel" => %(Depositor).freeze,
      "mads:code" => %(dpt).freeze,
      "skos:notation" => %(dpt).freeze,
      "skos:prefLabel" => %(Depositor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:own".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :drm,
      label: "Draftsman".freeze,
      "mads:authoritativeLabel" => %(Draftsman).freeze,
      "mads:code" => %(drm).freeze,
      "skos:notation" => %(drm).freeze,
      "skos:prefLabel" => %(Draftsman).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :drt,
      label: "Director".freeze,
      "mads:authoritativeLabel" => %(Director).freeze,
      "mads:code" => %(drt).freeze,
      "skos:notation" => %(drt).freeze,
      "skos:prefLabel" => %(Director).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dsr,
      label: "Designer".freeze,
      "mads:authoritativeLabel" => %(Designer).freeze,
      "mads:code" => %(dsr).freeze,
      "skos:notation" => %(dsr).freeze,
      "skos:prefLabel" => %(Designer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dst,
      label: "Distributor".freeze,
      "mads:authoritativeLabel" => %(Distributor).freeze,
      "mads:code" => %(dst).freeze,
      "skos:notation" => %(dst).freeze,
      "skos:prefLabel" => %(Distributor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prv".freeze, "dc11:publisher".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dtc,
      label: "Data contributor".freeze,
      "mads:authoritativeLabel" => %(Data contributor).freeze,
      "mads:code" => %(dtc).freeze,
      "skos:notation" => %(dtc).freeze,
      "skos:prefLabel" => %(Data contributor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dte,
      label: "Dedicatee".freeze,
      "mads:authoritativeLabel" => %(Dedicatee).freeze,
      "mads:code" => %(dte).freeze,
      "skos:notation" => %(dte).freeze,
      "skos:prefLabel" => %(Dedicatee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dtm,
      label: "Data manager".freeze,
      "mads:authoritativeLabel" => %(Data manager).freeze,
      "mads:code" => %(dtm).freeze,
      "skos:notation" => %(dtm).freeze,
      "skos:prefLabel" => %(Data manager).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dto,
      label: "Dedicator".freeze,
      "mads:authoritativeLabel" => %(Dedicator).freeze,
      "mads:code" => %(dto).freeze,
      "skos:notation" => %(dto).freeze,
      "skos:prefLabel" => %(Dedicator).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dub,
      label: "Dubious author".freeze,
      "mads:authoritativeLabel" => %(Dubious author).freeze,
      "mads:code" => %(dub).freeze,
      "skos:notation" => %(dub).freeze,
      "skos:prefLabel" => %(Dubious author).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :edc,
      label: "Editor of compilation".freeze,
      "mads:authoritativeLabel" => %(Editor of compilation).freeze,
      "mads:code" => %(edc).freeze,
      "skos:notation" => %(edc).freeze,
      "skos:prefLabel" => %(Editor of compilation).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :edm,
      label: "Editor of moving image work".freeze,
      "mads:authoritativeLabel" => %(Editor of moving image work).freeze,
      "mads:code" => %(edm).freeze,
      "skos:notation" => %(edm).freeze,
      "skos:prefLabel" => %(Editor of moving image work).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :edt,
      label: "Editor".freeze,
      "mads:authoritativeLabel" => %(Editor).freeze,
      "mads:code" => %(edt).freeze,
      "skos:notation" => %(edt).freeze,
      "skos:prefLabel" => %(Editor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :egr,
      label: "Engraver".freeze,
      "mads:authoritativeLabel" => %(Engraver).freeze,
      "mads:code" => %(egr).freeze,
      "skos:notation" => %(egr).freeze,
      "skos:prefLabel" => %(Engraver).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :elg,
      label: "Electrician".freeze,
      "mads:authoritativeLabel" => %(Electrician).freeze,
      "mads:code" => %(elg).freeze,
      "skos:notation" => %(elg).freeze,
      "skos:prefLabel" => %(Electrician).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :elt,
      label: "Electrotyper".freeze,
      "mads:authoritativeLabel" => %(Electrotyper).freeze,
      "mads:code" => %(elt).freeze,
      "skos:notation" => %(elt).freeze,
      "skos:prefLabel" => %(Electrotyper).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :eng,
      label: "Engineer".freeze,
      "mads:authoritativeLabel" => %(Engineer).freeze,
      "mads:code" => %(eng).freeze,
      "skos:notation" => %(eng).freeze,
      "skos:prefLabel" => %(Engineer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :enj,
      label: "Enacting jurisdiction".freeze,
      "mads:authoritativeLabel" => %(Enacting jurisdiction).freeze,
      "mads:code" => %(enj).freeze,
      "skos:notation" => %(enj).freeze,
      "skos:prefLabel" => %(Enacting jurisdiction).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :etr,
      label: "Etcher".freeze,
      "mads:authoritativeLabel" => %(Etcher).freeze,
      "mads:code" => %(etr).freeze,
      "skos:notation" => %(etr).freeze,
      "skos:prefLabel" => %(Etcher).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :evp,
      label: "Event place".freeze,
      "mads:authoritativeLabel" => %(Event place).freeze,
      "mads:code" => %(evp).freeze,
      "skos:notation" => %(evp).freeze,
      "skos:prefLabel" => %(Event place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :exp,
      label: "Expert".freeze,
      "mads:authoritativeLabel" => %(Expert).freeze,
      "mads:code" => %(exp).freeze,
      "skos:notation" => %(exp).freeze,
      "skos:prefLabel" => %(Expert).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fac,
      label: "Facsimilist".freeze,
      "mads:authoritativeLabel" => %(Facsimilist).freeze,
      "mads:code" => %(fac).freeze,
      "skos:notation" => %(fac).freeze,
      "skos:prefLabel" => %(Facsimilist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fds,
      label: "Film distributor".freeze,
      "mads:authoritativeLabel" => %(Film distributor).freeze,
      "mads:code" => %(fds).freeze,
      "skos:notation" => %(fds).freeze,
      "skos:prefLabel" => %(Film distributor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:dst".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fld,
      label: "Field director".freeze,
      "mads:authoritativeLabel" => %(Field director).freeze,
      "mads:code" => %(fld).freeze,
      "skos:notation" => %(fld).freeze,
      "skos:prefLabel" => %(Field director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :flm,
      label: "Film editor".freeze,
      "mads:authoritativeLabel" => %(Film editor).freeze,
      "mads:code" => %(flm).freeze,
      "skos:notation" => %(flm).freeze,
      "skos:prefLabel" => %(Film editor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:edm".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmd,
      label: "Film director".freeze,
      "mads:authoritativeLabel" => %(Film director).freeze,
      "mads:code" => %(fmd).freeze,
      "skos:notation" => %(fmd).freeze,
      "skos:prefLabel" => %(Film director).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:drt".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmk,
      label: "Filmmaker".freeze,
      "mads:authoritativeLabel" => %(Filmmaker).freeze,
      "mads:code" => %(fmk).freeze,
      "skos:notation" => %(fmk).freeze,
      "skos:prefLabel" => %(Filmmaker).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:drt".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmo,
      label: "Former owner".freeze,
      "mads:authoritativeLabel" => %(Former owner).freeze,
      "mads:code" => %(fmo).freeze,
      "skos:notation" => %(fmo).freeze,
      "skos:prefLabel" => %(Former owner).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmp,
      label: "Film producer".freeze,
      "mads:authoritativeLabel" => %(Film producer).freeze,
      "mads:code" => %(fmp).freeze,
      "skos:notation" => %(fmp).freeze,
      "skos:prefLabel" => %(Film producer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:pro".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fnd,
      label: "Funder".freeze,
      "mads:authoritativeLabel" => %(Funder).freeze,
      "mads:code" => %(fnd).freeze,
      "skos:notation" => %(fnd).freeze,
      "skos:prefLabel" => %(Funder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fpy,
      label: "First party".freeze,
      "mads:authoritativeLabel" => %(First party).freeze,
      "mads:code" => %(fpy).freeze,
      "skos:notation" => %(fpy).freeze,
      "skos:prefLabel" => %(First party).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :frg,
      label: "Forger".freeze,
      "mads:authoritativeLabel" => %(Forger).freeze,
      "mads:code" => %(frg).freeze,
      "skos:notation" => %(frg).freeze,
      "skos:prefLabel" => %(Forger).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :gis,
      label: "Geographic information specialist".freeze,
      "mads:authoritativeLabel" => %(Geographic information specialist).freeze,
      "mads:code" => %(gis).freeze,
      "skos:notation" => %(gis).freeze,
      "skos:prefLabel" => %(Geographic information specialist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :his,
      label: "Host institution".freeze,
      "mads:authoritativeLabel" => %(Host institution).freeze,
      "mads:code" => %(his).freeze,
      "skos:notation" => %(his).freeze,
      "skos:prefLabel" => %(Host institution).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:hst".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :hnr,
      label: "Honoree".freeze,
      "mads:authoritativeLabel" => %(Honoree).freeze,
      "mads:code" => %(hnr).freeze,
      "skos:notation" => %(hnr).freeze,
      "skos:prefLabel" => %(Honoree).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :hst,
      label: "Host".freeze,
      "mads:authoritativeLabel" => %(Host).freeze,
      "mads:code" => %(hst).freeze,
      "skos:notation" => %(hst).freeze,
      "skos:prefLabel" => %(Host).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ill,
      label: "Illustrator".freeze,
      "mads:authoritativeLabel" => %(Illustrator).freeze,
      "mads:code" => %(ill).freeze,
      "skos:notation" => %(ill).freeze,
      "skos:prefLabel" => %(Illustrator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ilu,
      label: "Illuminator".freeze,
      "mads:authoritativeLabel" => %(Illuminator).freeze,
      "mads:code" => %(ilu).freeze,
      "skos:notation" => %(ilu).freeze,
      "skos:prefLabel" => %(Illuminator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ins,
      label: "Inscriber".freeze,
      "mads:authoritativeLabel" => %(Inscriber).freeze,
      "mads:code" => %(ins).freeze,
      "skos:notation" => %(ins).freeze,
      "skos:prefLabel" => %(Inscriber).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :inv,
      label: "Inventor".freeze,
      "mads:authoritativeLabel" => %(Inventor).freeze,
      "mads:code" => %(inv).freeze,
      "skos:notation" => %(inv).freeze,
      "skos:prefLabel" => %(Inventor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :isb,
      label: "Issuing body".freeze,
      "mads:authoritativeLabel" => %(Issuing body).freeze,
      "mads:code" => %(isb).freeze,
      "skos:notation" => %(isb).freeze,
      "skos:prefLabel" => %(Issuing body).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :itr,
      label: "Instrumentalist".freeze,
      "mads:authoritativeLabel" => %(Instrumentalist).freeze,
      "mads:code" => %(itr).freeze,
      "skos:notation" => %(itr).freeze,
      "skos:prefLabel" => %(Instrumentalist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ive,
      label: "Interviewee".freeze,
      "mads:authoritativeLabel" => %(Interviewee).freeze,
      "mads:code" => %(ive).freeze,
      "skos:notation" => %(ive).freeze,
      "skos:prefLabel" => %(Interviewee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ivr,
      label: "Interviewer".freeze,
      "mads:authoritativeLabel" => %(Interviewer).freeze,
      "mads:code" => %(ivr).freeze,
      "skos:notation" => %(ivr).freeze,
      "skos:prefLabel" => %(Interviewer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :jud,
      label: "Judge".freeze,
      "mads:authoritativeLabel" => %(Judge).freeze,
      "mads:code" => %(jud).freeze,
      "skos:notation" => %(jud).freeze,
      "skos:prefLabel" => %(Judge).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :jug,
      label: "Jurisdiction governed".freeze,
      "mads:authoritativeLabel" => %(Jurisdiction governed).freeze,
      "mads:code" => %(jug).freeze,
      "skos:notation" => %(jug).freeze,
      "skos:prefLabel" => %(Jurisdiction governed).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lbr,
      label: "Laboratory".freeze,
      "mads:authoritativeLabel" => %(Laboratory).freeze,
      "mads:code" => %(lbr).freeze,
      "skos:notation" => %(lbr).freeze,
      "skos:prefLabel" => %(Laboratory).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lbt,
      label: "Librettist".freeze,
      "mads:authoritativeLabel" => %(Librettist).freeze,
      "mads:code" => %(lbt).freeze,
      "skos:notation" => %(lbt).freeze,
      "skos:prefLabel" => %(Librettist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ldr,
      label: "Laboratory director".freeze,
      "mads:authoritativeLabel" => %(Laboratory director).freeze,
      "mads:code" => %(ldr).freeze,
      "skos:notation" => %(ldr).freeze,
      "skos:prefLabel" => %(Laboratory director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :led,
      label: "Lead".freeze,
      "mads:authoritativeLabel" => %(Lead).freeze,
      "mads:code" => %(led).freeze,
      "skos:notation" => %(led).freeze,
      "skos:prefLabel" => %(Lead).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lee,
      label: "Libelee-appellee".freeze,
      "mads:authoritativeLabel" => %(Libelee-appellee).freeze,
      "mads:code" => %(lee).freeze,
      "skos:notation" => %(lee).freeze,
      "skos:prefLabel" => %(Libelee-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lel,
      label: "Libelee".freeze,
      "mads:authoritativeLabel" => %(Libelee).freeze,
      "mads:code" => %(lel).freeze,
      "skos:notation" => %(lel).freeze,
      "skos:prefLabel" => %(Libelee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :len,
      label: "Lender".freeze,
      "mads:authoritativeLabel" => %(Lender).freeze,
      "mads:code" => %(len).freeze,
      "skos:notation" => %(len).freeze,
      "skos:prefLabel" => %(Lender).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :let,
      label: "Libelee-appellant".freeze,
      "mads:authoritativeLabel" => %(Libelee-appellant).freeze,
      "mads:code" => %(let).freeze,
      "skos:notation" => %(let).freeze,
      "skos:prefLabel" => %(Libelee-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:lel".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lgd,
      label: "Lighting designer".freeze,
      "mads:authoritativeLabel" => %(Lighting designer).freeze,
      "mads:code" => %(lgd).freeze,
      "skos:notation" => %(lgd).freeze,
      "skos:prefLabel" => %(Lighting designer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lie,
      label: "Libelant-appellee".freeze,
      "mads:authoritativeLabel" => %(Libelant-appellee).freeze,
      "mads:code" => %(lie).freeze,
      "skos:notation" => %(lie).freeze,
      "skos:prefLabel" => %(Libelant-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:lil".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lil,
      label: "Libelant".freeze,
      "mads:authoritativeLabel" => %(Libelant).freeze,
      "mads:code" => %(lil).freeze,
      "skos:notation" => %(lil).freeze,
      "skos:prefLabel" => %(Libelant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lit,
      label: "Libelant-appellant".freeze,
      "mads:authoritativeLabel" => %(Libelant-appellant).freeze,
      "mads:code" => %(lit).freeze,
      "skos:notation" => %(lit).freeze,
      "skos:prefLabel" => %(Libelant-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:lil".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lsa,
      label: "Landscape architect".freeze,
      "mads:authoritativeLabel" => %(Landscape architect).freeze,
      "mads:code" => %(lsa).freeze,
      "skos:notation" => %(lsa).freeze,
      "skos:prefLabel" => %(Landscape architect).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:arc".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lse,
      label: "Licensee".freeze,
      "mads:authoritativeLabel" => %(Licensee).freeze,
      "mads:code" => %(lse).freeze,
      "skos:notation" => %(lse).freeze,
      "skos:prefLabel" => %(Licensee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lso,
      label: "Licensor".freeze,
      "mads:authoritativeLabel" => %(Licensor).freeze,
      "mads:code" => %(lso).freeze,
      "skos:notation" => %(lso).freeze,
      "skos:prefLabel" => %(Licensor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ltg,
      label: "Lithographer".freeze,
      "mads:authoritativeLabel" => %(Lithographer).freeze,
      "mads:code" => %(ltg).freeze,
      "skos:notation" => %(ltg).freeze,
      "skos:prefLabel" => %(Lithographer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lyr,
      label: "Lyricist".freeze,
      "mads:authoritativeLabel" => %(Lyricist).freeze,
      "mads:code" => %(lyr).freeze,
      "skos:notation" => %(lyr).freeze,
      "skos:prefLabel" => %(Lyricist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mcp,
      label: "Music copyist".freeze,
      "mads:authoritativeLabel" => %(Music copyist).freeze,
      "mads:code" => %(mcp).freeze,
      "skos:notation" => %(mcp).freeze,
      "skos:prefLabel" => %(Music copyist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mdc,
      label: "Metadata contact".freeze,
      "mads:authoritativeLabel" => %(Metadata contact).freeze,
      "mads:code" => %(mdc).freeze,
      "skos:notation" => %(mdc).freeze,
      "skos:prefLabel" => %(Metadata contact).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :med,
      label: "Medium".freeze,
      "mads:authoritativeLabel" => %(Medium).freeze,
      "mads:code" => %(med).freeze,
      "skos:notation" => %(med).freeze,
      "skos:prefLabel" => %(Medium).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mfp,
      label: "Manufacture place".freeze,
      "mads:authoritativeLabel" => %(Manufacture place).freeze,
      "mads:code" => %(mfp).freeze,
      "skos:notation" => %(mfp).freeze,
      "skos:prefLabel" => %(Manufacture place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mfr,
      label: "Manufacturer".freeze,
      "mads:authoritativeLabel" => %(Manufacturer).freeze,
      "mads:code" => %(mfr).freeze,
      "skos:notation" => %(mfr).freeze,
      "skos:prefLabel" => %(Manufacturer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prv".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mod,
      label: "Moderator".freeze,
      "mads:authoritativeLabel" => %(Moderator).freeze,
      "mads:code" => %(mod).freeze,
      "skos:notation" => %(mod).freeze,
      "skos:prefLabel" => %(Moderator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mon,
      label: "Monitor".freeze,
      "mads:authoritativeLabel" => %(Monitor).freeze,
      "mads:code" => %(mon).freeze,
      "skos:notation" => %(mon).freeze,
      "skos:prefLabel" => %(Monitor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mrb,
      label: "Marbler".freeze,
      "mads:authoritativeLabel" => %(Marbler).freeze,
      "mads:code" => %(mrb).freeze,
      "skos:notation" => %(mrb).freeze,
      "skos:prefLabel" => %(Marbler).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mrk,
      label: "Markup editor".freeze,
      "mads:authoritativeLabel" => %(Markup editor).freeze,
      "mads:code" => %(mrk).freeze,
      "skos:notation" => %(mrk).freeze,
      "skos:prefLabel" => %(Markup editor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :msd,
      label: "Musical director".freeze,
      "mads:authoritativeLabel" => %(Musical director).freeze,
      "mads:code" => %(msd).freeze,
      "skos:notation" => %(msd).freeze,
      "skos:prefLabel" => %(Musical director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mte,
      label: "Metal-engraver".freeze,
      "mads:authoritativeLabel" => %(Metal-engraver).freeze,
      "mads:code" => %(mte).freeze,
      "skos:notation" => %(mte).freeze,
      "skos:prefLabel" => %(Metal-engraver).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:egr".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mtk,
      label: "Minute taker".freeze,
      "mads:authoritativeLabel" => %(Minute taker).freeze,
      "mads:code" => %(mtk).freeze,
      "skos:notation" => %(mtk).freeze,
      "skos:prefLabel" => %(Minute taker).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mus,
      label: "Musician".freeze,
      "mads:authoritativeLabel" => %(Musician).freeze,
      "mads:code" => %(mus).freeze,
      "skos:notation" => %(mus).freeze,
      "skos:prefLabel" => %(Musician).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :nrt,
      label: "Narrator".freeze,
      "mads:authoritativeLabel" => %(Narrator).freeze,
      "mads:code" => %(nrt).freeze,
      "skos:notation" => %(nrt).freeze,
      "skos:prefLabel" => %(Narrator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :opn,
      label: "Opponent".freeze,
      "mads:authoritativeLabel" => %(Opponent).freeze,
      "mads:code" => %(opn).freeze,
      "skos:notation" => %(opn).freeze,
      "skos:prefLabel" => %(Opponent).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :org,
      label: "Originator".freeze,
      "mads:authoritativeLabel" => %(Originator).freeze,
      "mads:code" => %(org).freeze,
      "skos:notation" => %(org).freeze,
      "skos:prefLabel" => %(Originator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :orm,
      label: "Organizer".freeze,
      "mads:authoritativeLabel" => %(Organizer).freeze,
      "mads:code" => %(orm).freeze,
      "skos:notation" => %(orm).freeze,
      "skos:prefLabel" => %(Organizer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :osp,
      label: "Onscreen presenter".freeze,
      "mads:authoritativeLabel" => %(Onscreen presenter).freeze,
      "mads:code" => %(osp).freeze,
      "skos:notation" => %(osp).freeze,
      "skos:prefLabel" => %(Onscreen presenter).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :oth,
      label: "Other".freeze,
      "mads:authoritativeLabel" => %(Other).freeze,
      "mads:code" => %(oth).freeze,
      "skos:notation" => %(oth).freeze,
      "skos:prefLabel" => %(Other).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :own,
      label: "Owner".freeze,
      "mads:authoritativeLabel" => %(Owner).freeze,
      "mads:code" => %(own).freeze,
      "skos:notation" => %(own).freeze,
      "skos:prefLabel" => %(Owner).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pan,
      label: "Panelist".freeze,
      "mads:authoritativeLabel" => %(Panelist).freeze,
      "mads:code" => %(pan).freeze,
      "skos:notation" => %(pan).freeze,
      "skos:prefLabel" => %(Panelist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pat,
      label: "Patron".freeze,
      "mads:authoritativeLabel" => %(Patron).freeze,
      "mads:code" => %(pat).freeze,
      "skos:notation" => %(pat).freeze,
      "skos:prefLabel" => %(Patron).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pbd,
      label: "Publishing director".freeze,
      "mads:authoritativeLabel" => %(Publishing director).freeze,
      "mads:code" => %(pbd).freeze,
      "skos:notation" => %(pbd).freeze,
      "skos:prefLabel" => %(Publishing director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pbl,
      label: "Publisher".freeze,
      "mads:authoritativeLabel" => %(Publisher).freeze,
      "mads:code" => %(pbl).freeze,
      "skos:notation" => %(pbl).freeze,
      "skos:prefLabel" => %(Publisher).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prv".freeze, "dc11:publisher".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pdr,
      label: "Project director".freeze,
      "mads:authoritativeLabel" => %(Project director).freeze,
      "mads:code" => %(pdr).freeze,
      "skos:notation" => %(pdr).freeze,
      "skos:prefLabel" => %(Project director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pfr,
      label: "Proofreader".freeze,
      "mads:authoritativeLabel" => %(Proofreader).freeze,
      "mads:code" => %(pfr).freeze,
      "skos:notation" => %(pfr).freeze,
      "skos:prefLabel" => %(Proofreader).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pht,
      label: "Photographer".freeze,
      "mads:authoritativeLabel" => %(Photographer).freeze,
      "mads:code" => %(pht).freeze,
      "skos:notation" => %(pht).freeze,
      "skos:prefLabel" => %(Photographer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :plt,
      label: "Platemaker".freeze,
      "mads:authoritativeLabel" => %(Platemaker).freeze,
      "mads:code" => %(plt).freeze,
      "skos:notation" => %(plt).freeze,
      "skos:prefLabel" => %(Platemaker).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pma,
      label: "Permitting agency".freeze,
      "mads:authoritativeLabel" => %(Permitting agency).freeze,
      "mads:code" => %(pma).freeze,
      "skos:notation" => %(pma).freeze,
      "skos:prefLabel" => %(Permitting agency).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pmn,
      label: "Production manager".freeze,
      "mads:authoritativeLabel" => %(Production manager).freeze,
      "mads:code" => %(pmn).freeze,
      "skos:notation" => %(pmn).freeze,
      "skos:prefLabel" => %(Production manager).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pop,
      label: "Printer of plates".freeze,
      "mads:authoritativeLabel" => %(Printer of plates).freeze,
      "mads:code" => %(pop).freeze,
      "skos:notation" => %(pop).freeze,
      "skos:prefLabel" => %(Printer of plates).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ppm,
      label: "Papermaker".freeze,
      "mads:authoritativeLabel" => %(Papermaker).freeze,
      "mads:code" => %(ppm).freeze,
      "skos:notation" => %(ppm).freeze,
      "skos:prefLabel" => %(Papermaker).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ppt,
      label: "Puppeteer".freeze,
      "mads:authoritativeLabel" => %(Puppeteer).freeze,
      "mads:code" => %(ppt).freeze,
      "skos:notation" => %(ppt).freeze,
      "skos:prefLabel" => %(Puppeteer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pra,
      label: "Praeses".freeze,
      "mads:authoritativeLabel" => %(Praeses).freeze,
      "mads:code" => %(pra).freeze,
      "skos:notation" => %(pra).freeze,
      "skos:prefLabel" => %(Praeses).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prc,
      label: "Process contact".freeze,
      "mads:authoritativeLabel" => %(Process contact).freeze,
      "mads:code" => %(prc).freeze,
      "skos:notation" => %(prc).freeze,
      "skos:prefLabel" => %(Process contact).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prd,
      label: "Production personnel".freeze,
      "mads:authoritativeLabel" => %(Production personnel).freeze,
      "mads:code" => %(prd).freeze,
      "skos:notation" => %(prd).freeze,
      "skos:prefLabel" => %(Production personnel).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pre,
      label: "Presenter".freeze,
      "mads:authoritativeLabel" => %(Presenter).freeze,
      "mads:code" => %(pre).freeze,
      "skos:notation" => %(pre).freeze,
      "skos:prefLabel" => %(Presenter).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prf,
      label: "Performer".freeze,
      "mads:authoritativeLabel" => %(Performer).freeze,
      "mads:code" => %(prf).freeze,
      "skos:notation" => %(prf).freeze,
      "skos:prefLabel" => %(Performer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prg,
      label: "Programmer".freeze,
      "mads:authoritativeLabel" => %(Programmer).freeze,
      "mads:code" => %(prg).freeze,
      "skos:notation" => %(prg).freeze,
      "skos:prefLabel" => %(Programmer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prm,
      label: "Printmaker".freeze,
      "mads:authoritativeLabel" => %(Printmaker).freeze,
      "mads:code" => %(prm).freeze,
      "skos:notation" => %(prm).freeze,
      "skos:prefLabel" => %(Printmaker).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prn,
      label: "Production company".freeze,
      "mads:authoritativeLabel" => %(Production company).freeze,
      "mads:code" => %(prn).freeze,
      "skos:notation" => %(prn).freeze,
      "skos:prefLabel" => %(Production company).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pro,
      label: "Producer".freeze,
      "mads:authoritativeLabel" => %(Producer).freeze,
      "mads:code" => %(pro).freeze,
      "skos:notation" => %(pro).freeze,
      "skos:prefLabel" => %(Producer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prv".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prp,
      label: "Production place".freeze,
      "mads:authoritativeLabel" => %(Production place).freeze,
      "mads:code" => %(prp).freeze,
      "skos:notation" => %(prp).freeze,
      "skos:prefLabel" => %(Production place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prs,
      label: "Production designer".freeze,
      "mads:authoritativeLabel" => %(Production designer).freeze,
      "mads:code" => %(prs).freeze,
      "skos:notation" => %(prs).freeze,
      "skos:prefLabel" => %(Production designer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prt,
      label: "Printer".freeze,
      "mads:authoritativeLabel" => %(Printer).freeze,
      "mads:code" => %(prt).freeze,
      "skos:notation" => %(prt).freeze,
      "skos:prefLabel" => %(Printer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prv,
      label: "Provider".freeze,
      "mads:authoritativeLabel" => %(Provider).freeze,
      "mads:code" => %(prv).freeze,
      "skos:notation" => %(prv).freeze,
      "skos:prefLabel" => %(Provider).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pta,
      label: "Patent applicant".freeze,
      "mads:authoritativeLabel" => %(Patent applicant).freeze,
      "mads:code" => %(pta).freeze,
      "skos:notation" => %(pta).freeze,
      "skos:prefLabel" => %(Patent applicant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pte,
      label: "Plaintiff-appellee".freeze,
      "mads:authoritativeLabel" => %(Plaintiff-appellee).freeze,
      "mads:code" => %(pte).freeze,
      "skos:notation" => %(pte).freeze,
      "skos:prefLabel" => %(Plaintiff-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:ptf".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ptf,
      label: "Plaintiff".freeze,
      "mads:authoritativeLabel" => %(Plaintiff).freeze,
      "mads:code" => %(ptf).freeze,
      "skos:notation" => %(ptf).freeze,
      "skos:prefLabel" => %(Plaintiff).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pth,
      label: "Patent holder".freeze,
      "mads:authoritativeLabel" => %(Patent holder).freeze,
      "mads:code" => %(pth).freeze,
      "skos:notation" => %(pth).freeze,
      "skos:prefLabel" => %(Patent holder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ptt,
      label: "Plaintiff-appellant".freeze,
      "mads:authoritativeLabel" => %(Plaintiff-appellant).freeze,
      "mads:code" => %(ptt).freeze,
      "skos:notation" => %(ptt).freeze,
      "skos:prefLabel" => %(Plaintiff-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:ptf".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pup,
      label: "Publication place".freeze,
      "mads:authoritativeLabel" => %(Publication place).freeze,
      "mads:code" => %(pup).freeze,
      "skos:notation" => %(pup).freeze,
      "skos:prefLabel" => %(Publication place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rbr,
      label: "Rubricator".freeze,
      "mads:authoritativeLabel" => %(Rubricator).freeze,
      "mads:code" => %(rbr).freeze,
      "skos:notation" => %(rbr).freeze,
      "skos:prefLabel" => %(Rubricator).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rcd,
      label: "Recordist".freeze,
      "mads:authoritativeLabel" => %(Recordist).freeze,
      "mads:code" => %(rcd).freeze,
      "skos:notation" => %(rcd).freeze,
      "skos:prefLabel" => %(Recordist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rce,
      label: "Recording engineer".freeze,
      "mads:authoritativeLabel" => %(Recording engineer).freeze,
      "mads:code" => %(rce).freeze,
      "skos:notation" => %(rce).freeze,
      "skos:prefLabel" => %(Recording engineer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rcp,
      label: "Addressee".freeze,
      "mads:authoritativeLabel" => %(Addressee).freeze,
      "mads:code" => %(rcp).freeze,
      "skos:notation" => %(rcp).freeze,
      "skos:prefLabel" => %(Addressee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rdd,
      label: "Radio director".freeze,
      "mads:authoritativeLabel" => %(Radio director).freeze,
      "mads:code" => %(rdd).freeze,
      "skos:notation" => %(rdd).freeze,
      "skos:prefLabel" => %(Radio director).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:drt".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :red,
      label: "Redaktor".freeze,
      "mads:authoritativeLabel" => %(Redaktor).freeze,
      "mads:code" => %(red).freeze,
      "skos:notation" => %(red).freeze,
      "skos:prefLabel" => %(Redaktor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ren,
      label: "Renderer".freeze,
      "mads:authoritativeLabel" => %(Renderer).freeze,
      "mads:code" => %(ren).freeze,
      "skos:notation" => %(ren).freeze,
      "skos:prefLabel" => %(Renderer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :res,
      label: "Researcher".freeze,
      "mads:authoritativeLabel" => %(Researcher).freeze,
      "mads:code" => %(res).freeze,
      "skos:notation" => %(res).freeze,
      "skos:prefLabel" => %(Researcher).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rev,
      label: "Reviewer".freeze,
      "mads:authoritativeLabel" => %(Reviewer).freeze,
      "mads:code" => %(rev).freeze,
      "skos:notation" => %(rev).freeze,
      "skos:prefLabel" => %(Reviewer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :role,
      comment: %(This property and its sub-properties are used to associate a Bibliographic Resource with a Resource that played a part in the lifecycle of the Bibliographic Resource.  It is the inverse of relators:roleIn.).freeze,
      label: "role".freeze,
      type: "owl:ObjectProperty".freeze
    property :rpc,
      label: "Radio producer".freeze,
      "mads:authoritativeLabel" => %(Radio producer).freeze,
      "mads:code" => %(rpc).freeze,
      "skos:notation" => %(rpc).freeze,
      "skos:prefLabel" => %(Radio producer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:pro".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rps,
      label: "Repository".freeze,
      "mads:authoritativeLabel" => %(Repository).freeze,
      "mads:code" => %(rps).freeze,
      "skos:notation" => %(rps).freeze,
      "skos:prefLabel" => %(Repository).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rpt,
      label: "Reporter".freeze,
      "mads:authoritativeLabel" => %(Reporter).freeze,
      "mads:code" => %(rpt).freeze,
      "skos:notation" => %(rpt).freeze,
      "skos:prefLabel" => %(Reporter).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rpy,
      label: "Responsible party".freeze,
      "mads:authoritativeLabel" => %(Responsible party).freeze,
      "mads:code" => %(rpy).freeze,
      "skos:notation" => %(rpy).freeze,
      "skos:prefLabel" => %(Responsible party).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rse,
      label: "Respondent-appellee".freeze,
      "mads:authoritativeLabel" => %(Respondent-appellee).freeze,
      "mads:code" => %(rse).freeze,
      "skos:notation" => %(rse).freeze,
      "skos:prefLabel" => %(Respondent-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:rsp".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rsg,
      label: "Restager".freeze,
      "mads:authoritativeLabel" => %(Restager).freeze,
      "mads:code" => %(rsg).freeze,
      "skos:notation" => %(rsg).freeze,
      "skos:prefLabel" => %(Restager).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rsp,
      label: "Respondent".freeze,
      "mads:authoritativeLabel" => %(Respondent).freeze,
      "mads:code" => %(rsp).freeze,
      "skos:notation" => %(rsp).freeze,
      "skos:prefLabel" => %(Respondent).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rsr,
      label: "Restorationist".freeze,
      "mads:authoritativeLabel" => %(Restorationist).freeze,
      "mads:code" => %(rsr).freeze,
      "skos:notation" => %(rsr).freeze,
      "skos:prefLabel" => %(Restorationist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rst,
      label: "Respondent-appellant".freeze,
      "mads:authoritativeLabel" => %(Respondent-appellant).freeze,
      "mads:code" => %(rst).freeze,
      "skos:notation" => %(rst).freeze,
      "skos:prefLabel" => %(Respondent-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:rsp".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rth,
      label: "Research team head".freeze,
      "mads:authoritativeLabel" => %(Research team head).freeze,
      "mads:code" => %(rth).freeze,
      "skos:notation" => %(rth).freeze,
      "skos:prefLabel" => %(Research team head).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rtm,
      label: "Research team member".freeze,
      "mads:authoritativeLabel" => %(Research team member).freeze,
      "mads:code" => %(rtm).freeze,
      "skos:notation" => %(rtm).freeze,
      "skos:prefLabel" => %(Research team member).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sad,
      label: "Scientific advisor".freeze,
      "mads:authoritativeLabel" => %(Scientific advisor).freeze,
      "mads:code" => %(sad).freeze,
      "skos:notation" => %(sad).freeze,
      "skos:prefLabel" => %(Scientific advisor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sce,
      label: "Scenarist".freeze,
      "mads:authoritativeLabel" => %(Scenarist).freeze,
      "mads:code" => %(sce).freeze,
      "skos:notation" => %(sce).freeze,
      "skos:prefLabel" => %(Scenarist).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :scl,
      label: "Sculptor".freeze,
      "mads:authoritativeLabel" => %(Sculptor).freeze,
      "mads:code" => %(scl).freeze,
      "skos:notation" => %(scl).freeze,
      "skos:prefLabel" => %(Sculptor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:aut".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :scr,
      label: "Scribe".freeze,
      "mads:authoritativeLabel" => %(Scribe).freeze,
      "mads:code" => %(scr).freeze,
      "skos:notation" => %(scr).freeze,
      "skos:prefLabel" => %(Scribe).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sds,
      label: "Sound designer".freeze,
      "mads:authoritativeLabel" => %(Sound designer).freeze,
      "mads:code" => %(sds).freeze,
      "skos:notation" => %(sds).freeze,
      "skos:prefLabel" => %(Sound designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sec,
      label: "Secretary".freeze,
      "mads:authoritativeLabel" => %(Secretary).freeze,
      "mads:code" => %(sec).freeze,
      "skos:notation" => %(sec).freeze,
      "skos:prefLabel" => %(Secretary).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sgd,
      label: "Stage director".freeze,
      "mads:authoritativeLabel" => %(Stage director).freeze,
      "mads:code" => %(sgd).freeze,
      "skos:notation" => %(sgd).freeze,
      "skos:prefLabel" => %(Stage director).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sgn,
      label: "Signer".freeze,
      "mads:authoritativeLabel" => %(Signer).freeze,
      "mads:code" => %(sgn).freeze,
      "skos:notation" => %(sgn).freeze,
      "skos:prefLabel" => %(Signer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sht,
      label: "Supporting host".freeze,
      "mads:authoritativeLabel" => %(Supporting host).freeze,
      "mads:code" => %(sht).freeze,
      "skos:notation" => %(sht).freeze,
      "skos:prefLabel" => %(Supporting host).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sll,
      label: "Seller".freeze,
      "mads:authoritativeLabel" => %(Seller).freeze,
      "mads:code" => %(sll).freeze,
      "skos:notation" => %(sll).freeze,
      "skos:prefLabel" => %(Seller).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:fmo".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sng,
      label: "Singer".freeze,
      "mads:authoritativeLabel" => %(Singer).freeze,
      "mads:code" => %(sng).freeze,
      "skos:notation" => %(sng).freeze,
      "skos:prefLabel" => %(Singer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :spk,
      label: "Speaker".freeze,
      "mads:authoritativeLabel" => %(Speaker).freeze,
      "mads:code" => %(spk).freeze,
      "skos:notation" => %(spk).freeze,
      "skos:prefLabel" => %(Speaker).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :spn,
      label: "Sponsor".freeze,
      "mads:authoritativeLabel" => %(Sponsor).freeze,
      "mads:code" => %(spn).freeze,
      "skos:notation" => %(spn).freeze,
      "skos:prefLabel" => %(Sponsor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :spy,
      label: "Second party".freeze,
      "mads:authoritativeLabel" => %(Second party).freeze,
      "mads:code" => %(spy).freeze,
      "skos:notation" => %(spy).freeze,
      "skos:prefLabel" => %(Second party).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :srv,
      label: "Surveyor".freeze,
      "mads:authoritativeLabel" => %(Surveyor).freeze,
      "mads:code" => %(srv).freeze,
      "skos:notation" => %(srv).freeze,
      "skos:prefLabel" => %(Surveyor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :std,
      label: "Set designer".freeze,
      "mads:authoritativeLabel" => %(Set designer).freeze,
      "mads:code" => %(std).freeze,
      "skos:notation" => %(std).freeze,
      "skos:prefLabel" => %(Set designer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stg,
      label: "Setting".freeze,
      "mads:authoritativeLabel" => %(Setting).freeze,
      "mads:code" => %(stg).freeze,
      "skos:notation" => %(stg).freeze,
      "skos:prefLabel" => %(Setting).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stl,
      label: "Storyteller".freeze,
      "mads:authoritativeLabel" => %(Storyteller).freeze,
      "mads:code" => %(stl).freeze,
      "skos:notation" => %(stl).freeze,
      "skos:prefLabel" => %(Storyteller).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stm,
      label: "Stage manager".freeze,
      "mads:authoritativeLabel" => %(Stage manager).freeze,
      "mads:code" => %(stm).freeze,
      "skos:notation" => %(stm).freeze,
      "skos:prefLabel" => %(Stage manager).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stn,
      label: "Standards body".freeze,
      "mads:authoritativeLabel" => %(Standards body).freeze,
      "mads:code" => %(stn).freeze,
      "skos:notation" => %(stn).freeze,
      "skos:prefLabel" => %(Standards body).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :str,
      label: "Stereotyper".freeze,
      "mads:authoritativeLabel" => %(Stereotyper).freeze,
      "mads:code" => %(str).freeze,
      "skos:notation" => %(str).freeze,
      "skos:prefLabel" => %(Stereotyper).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tcd,
      label: "Technical director".freeze,
      "mads:authoritativeLabel" => %(Technical director).freeze,
      "mads:code" => %(tcd).freeze,
      "skos:notation" => %(tcd).freeze,
      "skos:prefLabel" => %(Technical director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tch,
      label: "Teacher".freeze,
      "mads:authoritativeLabel" => %(Teacher).freeze,
      "mads:code" => %(tch).freeze,
      "skos:notation" => %(tch).freeze,
      "skos:prefLabel" => %(Teacher).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:prf".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ths,
      label: "Thesis advisor".freeze,
      "mads:authoritativeLabel" => %(Thesis advisor).freeze,
      "mads:code" => %(ths).freeze,
      "skos:notation" => %(ths).freeze,
      "skos:prefLabel" => %(Thesis advisor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tld,
      label: "Television director".freeze,
      "mads:authoritativeLabel" => %(Television director).freeze,
      "mads:code" => %(tld).freeze,
      "skos:notation" => %(tld).freeze,
      "skos:prefLabel" => %(Television director).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:drt".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tlp,
      label: "Television producer".freeze,
      "mads:authoritativeLabel" => %(Television producer).freeze,
      "mads:code" => %(tlp).freeze,
      "skos:notation" => %(tlp).freeze,
      "skos:prefLabel" => %(Television producer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:pro".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :trc,
      label: "Transcriber".freeze,
      "mads:authoritativeLabel" => %(Transcriber).freeze,
      "mads:code" => %(trc).freeze,
      "skos:notation" => %(trc).freeze,
      "skos:prefLabel" => %(Transcriber).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :trl,
      label: "Translator".freeze,
      "mads:authoritativeLabel" => %(Translator).freeze,
      "mads:code" => %(trl).freeze,
      "skos:notation" => %(trl).freeze,
      "skos:prefLabel" => %(Translator).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tyd,
      label: "Type designer".freeze,
      "mads:authoritativeLabel" => %(Type designer).freeze,
      "mads:code" => %(tyd).freeze,
      "skos:notation" => %(tyd).freeze,
      "skos:prefLabel" => %(Type designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tyg,
      label: "Typographer".freeze,
      "mads:authoritativeLabel" => %(Typographer).freeze,
      "mads:code" => %(tyg).freeze,
      "skos:notation" => %(tyg).freeze,
      "skos:prefLabel" => %(Typographer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :uvp,
      label: "University place".freeze,
      "mads:authoritativeLabel" => %(University place).freeze,
      "mads:code" => %(uvp).freeze,
      "skos:notation" => %(uvp).freeze,
      "skos:prefLabel" => %(University place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :vac,
      label: "Voice actor".freeze,
      "mads:authoritativeLabel" => %(Voice actor).freeze,
      "mads:code" => %(vac).freeze,
      "skos:notation" => %(vac).freeze,
      "skos:prefLabel" => %(Voice actor).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:act".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :vdg,
      label: "Videographer".freeze,
      "mads:authoritativeLabel" => %(Videographer).freeze,
      "mads:code" => %(vdg).freeze,
      "skos:notation" => %(vdg).freeze,
      "skos:prefLabel" => %(Videographer).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wac,
      label: "Writer of added commentary".freeze,
      "mads:authoritativeLabel" => %(Writer of added commentary).freeze,
      "mads:code" => %(wac).freeze,
      "skos:notation" => %(wac).freeze,
      "skos:prefLabel" => %(Writer of added commentary).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:wst".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wal,
      label: "Writer of added lyrics".freeze,
      "mads:authoritativeLabel" => %(Writer of added lyrics).freeze,
      "mads:code" => %(wal).freeze,
      "skos:notation" => %(wal).freeze,
      "skos:prefLabel" => %(Writer of added lyrics).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:wst".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wam,
      label: "Writer of accompanying material".freeze,
      "mads:authoritativeLabel" => %(Writer of accompanying material).freeze,
      "mads:code" => %(wam).freeze,
      "skos:notation" => %(wam).freeze,
      "skos:prefLabel" => %(Writer of accompanying material).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wat,
      label: "Writer of added text".freeze,
      "mads:authoritativeLabel" => %(Writer of added text).freeze,
      "mads:code" => %(wat).freeze,
      "skos:notation" => %(wat).freeze,
      "skos:prefLabel" => %(Writer of added text).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:wst".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wdc,
      label: "Woodcutter".freeze,
      "mads:authoritativeLabel" => %(Woodcutter).freeze,
      "mads:code" => %(wdc).freeze,
      "skos:notation" => %(wdc).freeze,
      "skos:prefLabel" => %(Woodcutter).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wde,
      label: "Wood engraver".freeze,
      "mads:authoritativeLabel" => %(Wood engraver).freeze,
      "mads:code" => %(wde).freeze,
      "skos:notation" => %(wde).freeze,
      "skos:prefLabel" => %(Wood engraver).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :win,
      label: "Writer of introduction".freeze,
      "mads:authoritativeLabel" => %(Writer of introduction).freeze,
      "mads:code" => %(win).freeze,
      "skos:notation" => %(win).freeze,
      "skos:prefLabel" => %(Writer of introduction).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wit,
      label: "Witness".freeze,
      "mads:authoritativeLabel" => %(Witness).freeze,
      "mads:code" => %(wit).freeze,
      "skos:notation" => %(wit).freeze,
      "skos:prefLabel" => %(Witness).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wpr,
      label: "Writer of preface".freeze,
      "mads:authoritativeLabel" => %(Writer of preface).freeze,
      "mads:code" => %(wpr).freeze,
      "skos:notation" => %(wpr).freeze,
      "skos:prefLabel" => %(Writer of preface).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wst,
      label: "Writer of supplementary textual content".freeze,
      "mads:authoritativeLabel" => %(Writer of supplementary textual content).freeze,
      "mads:code" => %(wst).freeze,
      "skos:notation" => %(wst).freeze,
      "skos:prefLabel" => %(Writer of supplementary textual content).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "dc11:contributor".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]

    # Extra definitions
    term :collection_BIBFRAMEInstance,
      label: "Relators - BIBFRAME Instance Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_BIBFRAMEWork,
      label: "Relators - BIBFRAME Work Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDA,
      label: "Relators - RDA Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAContributor,
      label: "Relators - RDA Contributor Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDACreator,
      label: "Relators - RDA Creator Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDADistributor,
      label: "Relators - RDA Distributor Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAExpression,
      label: "Relators - RDA Expression Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAItem,
      label: "Relators - RDA Item Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAManifestation,
      label: "Relators - RDA Manifestation Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAManufacturer,
      label: "Relators - RDA Manufacturer Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAOther,
      label: "Relators - RDA Other Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAOwner,
      label: "Relators - RDA Owner Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAPublisher,
      label: "Relators - RDA Publisher Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAWork,
      label: "Relators - RDA Work Collection".freeze,
      type: "mads:MADSCollection".freeze
  end
end
